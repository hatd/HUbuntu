# https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash
# create file: sudo nano /etc/bash_completion.d/git-completion.bash
# file bash: sudo nano ~/.bash_aliases


# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
# Reset
Color_Off="\[\033[0m\]"       # Text Reset

# Regular Colors
Black="\[\033[0;30m\]"        # Black
Red="\[\033[0;31m\]"          # Red
Green="\[\033[0;32m\]"        # Green
Yellow="\[\033[0;33m\]"       # Yellow
Blue="\[\033[0;34m\]"         # Blue
Purple="\[\033[0;35m\]"       # Purple
Cyan="\[\033[0;36m\]"         # Cyan
White="\[\033[0;37m\]"        # White

# Bold
BBlack="\[\033[1;30m\]"       # Black
BRed="\[\033[1;31m\]"         # Red
BGreen="\[\033[1;32m\]"       # Green
BYellow="\[\033[1;33m\]"      # Yellow
BBlue="\[\033[1;34m\]"        # Blue
BPurple="\[\033[1;35m\]"      # Purple
BCyan="\[\033[1;36m\]"        # Cyan
BWhite="\[\033[1;37m\]"       # White

# Underline
UBlack="\[\033[4;30m\]"       # Black
URed="\[\033[4;31m\]"         # Red
UGreen="\[\033[4;32m\]"       # Green
UYellow="\[\033[4;33m\]"      # Yellow
UBlue="\[\033[4;34m\]"        # Blue
UPurple="\[\033[4;35m\]"      # Purple
UCyan="\[\033[4;36m\]"        # Cyan
UWhite="\[\033[4;37m\]"       # White

# Background
On_Black="\[\033[40m\]"       # Black
On_Red="\[\033[41m\]"         # Red
On_Green="\[\033[42m\]"       # Green
On_Yellow="\[\033[43m\]"      # Yellow
On_Blue="\[\033[44m\]"        # Blue
On_Purple="\[\033[45m\]"      # Purple
On_Cyan="\[\033[46m\]"        # Cyan
On_White="\[\033[47m\]"       # White

# High Intensty
IBlack="\[\033[0;90m\]"       # Black
IRed="\[\033[0;91m\]"         # Red
IGreen="\[\033[0;92m\]"       # Green
IYellow="\[\033[0;93m\]"      # Yellow
IBlue="\[\033[0;94m\]"        # Blue
IPurple="\[\033[0;95m\]"      # Purple
ICyan="\[\033[0;96m\]"        # Cyan
IWhite="\[\033[0;97m\]"       # White

# Bold High Intensty
BIBlack="\[\033[1;90m\]"      # Black
BIRed="\[\033[1;91m\]"        # Red
BIGreen="\[\033[1;92m\]"      # Green
BIYellow="\[\033[1;93m\]"     # Yellow
BIBlue="\[\033[1;94m\]"       # Blue
BIPurple="\[\033[1;95m\]"     # Purple
BICyan="\[\033[1;96m\]"       # Cyan
BIWhite="\[\033[1;97m\]"      # White

# High Intensty backgrounds
On_IBlack="\[\033[0;100m\]"   # Black
On_IRed="\[\033[0;101m\]"     # Red
On_IGreen="\[\033[0;102m\]"   # Green
On_IYellow="\[\033[0;103m\]"  # Yellow
On_IBlue="\[\033[0;104m\]"    # Blue
On_IPurple="\[\033[10;95m\]"  # Purple
On_ICyan="\[\033[0;106m\]"    # Cyan
On_IWhite="\[\033[0;107m\]"   # White

# Various variables you might want for your PS1 prompt instead
Time12h="\T"
Time12a="\@"
PathShort="\w"
PathFull="\W"
NewLine="\n"
Jobs="\j"


export PS1='$(git branch &>/dev/null;\
if [ $? -eq 0 ]; then \
  echo "'$BYellow$PathShort$Color_Off'$(echo `git status` | grep "nothing to commit" > /dev/null 2>&1; \
  if [ "$?" -eq "0" ]; then \
    # @4 - Clean repository - nothing to commit
    echo "'$Green'"$(__git_ps1 "(%s)"); \
  else \
    # @5 - Changes to working tree
    echo "'$IRed'"$(__git_ps1 "{%s}"); \
  fi)'$Color_Off' \$'$Cyan::$Color_Off' "; \
else \
  # @2 - Prompt when not in GIT repo
  echo "'$BYellow$PathShort$Color_Off' \$'$Cyan::$Color_Off' "; \
fi)'


# Git
alias ..='cd ..'
alias b='bundle install'
alias rc='rails c'
alias rr='rails routes'
alias rdm='rails db:migrate'
alias rdmr='rails db:migrate:reset'
alias gl='git log --oneline -n 10'
alias gs='git status'
alias gd='git diff'
alias grb='git rebase'
alias grl='git reflog'
alias pull='git pull'
alias add='git add -A'
alias gr='git reset --soft HEAD^'
alias amend='git commit --amend'

fetch() {
  git fetch source
}

# fetch pull_request --with-pull-id
fetchp() {
  gb -D $1
  git fetch source pull/$1/head:$1
}

fetchb() {
  git fetch source $1
}

# git branch --with-option
gb() {
  git branch $*
}

# git commit --with-message
gcm() {
  has_debug=$(gd | grep -Eo "binding.pry|debugger")
  if [[ -n "$has_debug" ]]
  then
    echo "Have binding.pry or debugger!!!";
  else
    if [[ -n "$*" ]]
    then
      add;
      # commit with message
      git commit -m "$*";
    else
      has_change=$(git status -s)
      #if have any change
      if [[ -n "$has_change" ]]
      then
        add;
        newest_commit_is_merge=$(git log -1 --pretty=%B | grep "Merge pull request")
        if [[ -n "$newest_commit_is_merge" ]]
        then
          current_branch=$(git symbolic-ref --short -q HEAD);
          git commit -m $current_branch;
        else
          git commit --amend --no-edit;
        fi
      fi
    fi
  fi
}

# git checkout --with-option
gco() {
  git checkout $*
}

# rails server --with-option
rs() {
  rails s $*
}

push(){
  current_branch=$(git symbolic-ref --short -q HEAD);
  gcm
  git push origin $current_branch -f;
}

# auto complete
source /etc/bash_completion.d/git-completion.bash
__git_complete gco _git_checkout
__git_complete gb _git_branch
__git_complete gd _git_diff
__git_complete b _git_bundle
__git_complete grb _git_rebase
__git_complete grl _git_reflog
__git_complete gs _git_status
__git_complete pull _git_branch
